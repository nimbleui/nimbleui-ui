@use "./mixins/mixins.scss" as *;
@use "./mixins/function.scss" as *;
@use "./mixins/utils.scss" as *;

// 设置变量
@include b(button) {
  --y-button-text-color: var(--y-color-text);
  --y-button-border-color: var(--y-color-border);
  --y-button-before-bg-color: var(--y-color-theme);
  --y-button-after-border-color: var(--y-color-theme);
  --y-button-hover-text-color: var(--y-color-primary);
  --y-button-hover-bg-color: var(--y-color-primary-1);
  --y-button-hover-border-color: var(--y-color-primary-3);
  --y-button-disabled-opacity: var(--y-disabled-opacity);
  --y-button-primary-bg-color: var(--y-color-primary);
  --y-button-primary-border-color: var(--y-color-primary);
  --y-button-primary-text-color: #fff;
  --y-button-success-bg-color: var(--y-color-success);
  --y-button-success-border-color: var(--y-color-success);
  --y-button-success-text-color: #fff;
  --y-button-warning-bg-color: var(--y-color-warning);
  --y-button-warning-border-color: var(--y-color-warning);
  --y-button-warning-text-color: #fff;
  --y-button-error-bg-color: var(--y-color-error);
  --y-button-error-border-color: var(--y-color-error);
  --y-button-error-text-color: #fff;
  --y-button-info-bg-color: var(--y-color-info);
  --y-button-info-border-color: var(--y-color-info);
  --y-button-info-text-color: #fff;
  --y-button-bg-color: var(--y-color-theme);
}

@include b(button) {
  position: relative;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  line-height: 1;
  white-space: nowrap;
  outline: none;
  cursor: pointer;
  text-align: center;
  box-sizing: border-box;
  user-select: none;
  vertical-align: middle;
  color: get-css-var('button', 'text-color');
  background-color: get-css-var('button', 'bg-color');
  border: 1px solid;
  border-color: get-css-var('button', 'border-color');
  padding: 8px 15px;
  border-radius: 4px;

  &::after {
    position: absolute;
    inset: 0;
    box-sizing: border-box;
    border-radius: inherit;
    opacity: 0;
    transition: .3s;
    box-shadow: 0 0 0 8px get-css-var('button', 'primary', 'border-color');
    content: ' ';
  }

  &::before {
    position: absolute;
    left: -1px;
    top: -1px;
    width: 100%;
    height: 100%;
    opacity: 0;
    border: 1px solid var(--y-button-after-border-color);
    background-color: var(--y-button-before-bg-color);
    content: ' ';
  }

  &:hover {
    &:not(.is-disabled) {
      transition: all .2s cubic-bezier(.645,.045,.355,1);
      color: get-css-var('button', 'hover', 'text-color');
      border-color: get-css-var('button', 'hover', 'border-color');
      outline: none;
    }
  }

  /* stylelint-disable-next-line no-descending-specificity */
  &:not(.is-disabled) {
    &:active::after {
      box-shadow: none;
      opacity: 0.6;
      transition: 0s;
    }
  }

  @include when(round) {
    border-radius: 500px;
  }

  @include when(circle) {
    border-radius: 50%;
    padding: 8px;
  }

  @include when(disabled) {
    cursor: not-allowed;
    opacity: get-css-var('button', 'disabled', 'opacity');
  }

  @each $type in (primary, success, warning, error, info) {
    @include when($type) {
      .is-loading {
        &::after {
          border-color: #fff;
          border-bottom-color: transparent;
        }
      }

      &:not(.is-plain) {
        border-color: get-css-var('button', $type, 'border-color');
        background-color: get-css-var('button', $type, 'bg-color');
        color: get-css-var('button', $type, 'text-color');
  
        &:not(.is-disabled), &:not(.is-loading) {
          &::after {
            box-shadow: 0 0 0 8px get-css-var('button', $type, 'border-color');
          }

          &:active::after {
            box-shadow: none;
            opacity: 0.8;
            transition: 0s;
          }

          &:hover::before {
            opacity: 0.2;
          }
        }
      }

      &.is-plain {
        border-color: get-css-var('button', $type, 'border-color');
        color: get-css-var('button', $type, 'bg-color');

        &:not(.is-disabled), &:not(.is-loading) {
          &::after {
            box-shadow: 0 0 0 8px get-css-var('button', $type, 'border-color');
          }

          &:active::after {
            box-shadow: none;
            opacity: 0.8;
            transition: 0s;
          }

          &:hover::before {
            opacity: 0.2;
          }
        }
      }
    }
  }

  @each $size in (large, small) {
    @include when($size) {
      @if $size == 'large' {
        padding: 12px 19px;
      }

      @if $size == 'small' {
        padding: 5px 11px; 
      }
    }
  }

  @include when(block) {
    display: flex;
    width: 100%;
  }

  @include when(loading) {
    cursor: not-allowed;
    opacity: get-css-var('button', 'disabled', 'opacity');
  }

  .is-loading {
    display: block;
    margin-right: 5px;

    &::after {
      display: block;
      content: " ";

      @include loading(10px, 10px)

    }
  }
}
